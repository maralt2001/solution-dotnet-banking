version: '3.4'
#create docker volumes for mongodb
volumes: 
  mongodata:
    name: "MongoData-WebDB"
  mongoconfig:
    name: "MongoConfig-WebDB"
  redisdata:
    name: "Redis-Data"

services:
  mongo:
    image: mongo:latest
    restart: always
    container_name: mongo-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
        - 27018:27017
    volumes: 
       - mongodata:/data/db
       - mongoconfig:/data/configdb 
  bankingapi:
    image: bankingapi
    container_name: banking-api
    build: 
      context: ./
      dockerfile: Dockerfile.bankingapi
    ports: 
      - 5001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - Redis:RedisHashExpire=1 
    depends_on:
      - mongo
  bankingclient:
    image: bankingclient
    container_name: banking-client
    build: 
      context: ./
      dockerfile: Dockerfile.bankingclient
    ports: 
      - 5005:80
    environment:
     - BackEndUri=http://banking-api
     - RelLoginUri=/api/user/login
     - RelLogoutUri=/api/user/logout
     - RelRegisterUri=/api/user/register
     - RelGetAllAccounts=/api/banking/accounts/getall
     - RelGetOneAccountRegex=/api/banking/account/getoneregex
     - RelGetAccountsRegex=/api/banking/accounts/getaccountsregex
     - RelPostAccount=/api/banking/account/create
     - RelUpdateAccount=/api/banking/account/update
     - RelDeleteAccount=/api/banking/account/delete
    depends_on: 
      - bankingapi
  redis:
    image: redis
    container_name: cache
    build:
      context: ./
      dockerfile: Dockerfile.redis
    ports: 
    - 6379:6379
    volumes:
      - redisdata:/data
  